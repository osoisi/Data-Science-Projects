table 'All Measures'
	lineageTag: f2a931e1-0f0d-4de7-819e-6efcc26cdcbd

	measure 'Average difference %' = AVERAGE('Gridserve KNN Predictions'[Percentage Difference])
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: cd440040-043a-4be9-8614-6971ff887bc8

	measure 'Average Difference' = AVERAGE('Gridserve KNN Predictions'[Difference])
		formatString: 0.00
		lineageTag: 0666f950-70dd-4881-9f4e-63e15b1e18f7

	measure 'Correct predictions' =
			CALCULATE(
			    COUNT('Gridserve KNN Predictions'[Difference]),
			    'Gridserve KNN Predictions'[Difference] = 0
			)
		formatString: 0.00
		lineageTag: 1eede162-85f5-4189-a1dc-3bbf78e33db0

	measure 'Number of Entries' = COUNT('Gridserve KNN Predictions'[Index])
		formatString: 0.00
		lineageTag: 9de213da-52d7-4f7c-ab47-218260d73e7d

	measure 'Gap Between -2 & 0' = CALCULATE(COUNT('Gridserve KNN Predictions'[Difference Group]),'Gridserve KNN Predictions'[Difference Group]="Moderately Less")
		formatString: 0
		lineageTag: f5c6be1f-c014-4cf7-8e29-db1ace0b7641

	measure 'Gap < - 2' = CALCULATE(COUNT('Gridserve KNN Predictions'[Difference Group]),'Gridserve KNN Predictions'[Difference Group]="Significantly Less")
		formatString: 0
		lineageTag: e0f6c1ce-bbb7-437e-a58a-808b2d9d5e2c

	measure 'Gap Between 0 & 2' = CALCULATE(COUNT('Gridserve KNN Predictions'[Difference Group]),'Gridserve KNN Predictions'[Difference Group]="Moderately More")
		formatString: 0
		lineageTag: e4651c8d-531b-42ba-80e4-f8bc3a67879f

	measure 'Gap > 2' = CALCULATE(COUNT('Gridserve KNN Predictions'[Difference Group]),'Gridserve KNN Predictions'[Difference Group]="Significantly More")
		formatString: 0
		lineageTag: 6c342407-fe5f-404d-80b4-63fee6e34afa

	partition 'All Measures' = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Column1", type text}}),
				    #"Removed Columns" = Table.RemoveColumns(#"Changed Type",{"Column1"})
				in
				    #"Removed Columns"

	annotation PBI_ResultType = Table

